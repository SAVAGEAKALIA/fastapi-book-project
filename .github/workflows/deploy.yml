name: Application Build and Deployment
run-name: ${{ github.actor }} is Deploying HNG Fast-api to server🚀

on:
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
      run: echo "🐍 Python 3.10 has been set up."

    - name: Install Docker on GitHub Actions server
      run: |
        echo "🔄 Updating package lists..."
        sudo apt update
        echo "📦 Installing Docker..."
        sudo apt install -y docker.io
        echo "🚀 Starting Docker service..."
        sudo systemctl start docker
        echo "🔧 Enabling Docker service to start on boot..."
        sudo systemctl enable docker

    - name: Build Docker Image
      run: |
        echo "🔨 Building Docker image..."
        docker build -t my-image .

    - name: Save Docker Image as Tar file
      run: |
        echo "💾 Saving Docker image as tar file..."
        docker save my-image -o my-image.tar.gz

    - name: Upload Docker Image to Server
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: my-image.tar.gz
        target: /home/ubuntu/my-image.tar.gz
      run: echo "📤 Docker image uploaded to server."

    - name: Install Docker on Server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          if ! command -v docker > /dev/null; then
            echo "🔍 Docker is not installed, installing..."
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "✅ Docker is already installed, skipping installation."
          fi

    - name: Load Docker Image on Server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "📦 Loading Docker image on server..."
          docker load -i /home/ubuntu/my-image.tar.gz
          echo "🛑 Stopping existing container if it exists..."
          docker stop my-container || true
          echo "🗑️ Removing existing container if it exists..."
          docker rm my-container || true
          echo "🚀 Running new container from the image..."
          docker run -d --name my-container -p 8000:8000 my-image

    - name: Configure Nginx
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "🔧 Testing Nginx configuration..."
          nginx -t
          echo "🔄 Restarting Nginx service..."
          sudo service nginx restart

    - run: echo "🧪 Deployment completed."
    - run: echo "🍏 This job's status is ${{ job.status }}."
