name: Application Build and Deployment
run-name: ${{ github.actor }} is Deploying HNG Fast-api to serverðŸš€

on:
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: docker build -t my-image .

    - name: Save Docker Image as Tar
      run: docker save -o my-image.tar.gz my-image

    - name: Clean Remote Image File (if exists)
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          rm -rf /home/ubuntu/my-image.tar.gz

    - name: Upload Docker Image to Server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: my-image.tar.gz
        target: /home/ubuntu/

    - name: Deploy Docker Image on Server
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Install Docker if not already installed
          if ! command -v docker > /dev/null; then
            sudo apt update && sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          fi
          # Load the image, force-remove any existing container, and run the new container
          sudo docker load -i /home/ubuntu/my-image.tar.gz
          sudo docker rm -f my-container || true
          sudo docker run -d --name my-container -p 8000:8000 my-image

    - name: Deployment Complete
      run: echo "Deployment completed successfully."
