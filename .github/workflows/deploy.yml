name: Application Build and Deployment
run-name: ${{ github.actor }} is Deploying HNG Fast-api to server🚀

on:
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Build Docker Image
      run: |
        docker build -t my-image .

    - name: Save Docker Image as Tar file
      run: |
        docker save -o my-image.tar.gz my-image

    - name: Remove existing image directory on Server (if any)
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          rm -rf /home/ubuntu/my-image.tar.gz


    - name: Upload Docker Image to Server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: my-image.tar.gz
        target: /home/ubuntu/

    - name: Install and Load Docker Image on Server
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          if ! command -v docker > /dev/null; then
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          fi
          sudo docker load -i /home/ubuntu/my-image.tar.gz
          sudo docker stop my-container || true
          sudo docker rm my-container || true
          sudo docker run -d --name my-container -p 8000:8000 my-image

    - run: echo "🧪 Deployment completed."
    - run: echo "🍏 This job's status is ${{ job.status }}."